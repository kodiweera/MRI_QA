%READ_FBIRN_QA_XML  Read a "SummaryQA.xml" from FBIRN QC processing
%
%This program reads the output generated by the BXH/XCEDE package
%distributed by FBIRN as part of their phantom QA/QC setup.
%
%USAGE:
%
%  S = read_fbirn_qa_xml([xml_file])
%
%If you do not pass a path to an XML file as an argument, a dialog for
%selecting "SummaryQA.xml" files will appear.

function S = read_fbirn_qa_xml(xfile)
  
  if ~exist('xfile', 'var')
    [fn,pn] = uigetfile('SummaryQA.xml', 'Pick a SummaryQA.xml file');
    if isequal(fn,0) || isequal(pn,0)
      S = [];
      return
    else
      xfile = fullfile(pn,fn);
    end
  end
  

  % read in the file with XML toolbox
  xmltoolbox = '/net/age2/recon_files/xml_toolbox';
  addpath(xmltoolbox);
  
  s = xml_parseany(fileread(xfile));
  
  if isempty(s)
    disp('Read failed?')
    return
  end
  
  % Expected file contents (including things we don't use)
  
  % measurementGroup 1 contains 90 summary values that we will use
  
  % MG 2-199 (N = 198) contain rawSignalROI and rawSignalFIT for frameNum =
  % 1 to 198. Not sure why these stop short of 200. 
  
  % MG 200-298 (N = 99) contain "frequency" and "spectrum" values. Not sure
  % what those are. 
  
  % MG 299-340 (N = 41) contain roiWidths 1-21, twice. The first set is
  % relSTDMeas, and the second is relSTDCalc. Not sure why they didn't pair
  % them up as in MG2-199, but hey. 
  
  % MG 341-538 (N = 198) for the 200 volume scan contain centers of mass;
  % these actually correspond to volnum = 0 to volnum = 197. Not sure why
  % these start from zero.  
  
  MG = s.analysis{1}.measurementGroup;
  summary = MG{1}.observation;
  S = struct('sourcefile', xfile);
  
  for i = 1:length(summary)
    
    type = summary{i}.ATTRIBUTE.type;
    name = summary{i}.ATTRIBUTE.name;
    val = summary{i}.CONTENT;
    
    if isnumable(val)
      S = setfield(S, safename(name), str2num(val));
    else
      S = setfield(S, safename(name), val);      
    end
    
  end
  
